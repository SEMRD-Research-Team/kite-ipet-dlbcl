---
title: "Investigating positron emission tomography (PET) scan use in diffuse large B-cell lymphoma (DLBCL) - A Hospital Episode Statistics feasibility analysis"
author: "Andre Ng"
date: "`r Sys.Date()`"
output: html_document
format: html
editor: source
subtitle: "Cohort Creation"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)


# renv::snapshot()
#Check for any packaging issues
renv::status()
# renv::restore()


```



```{r load_libraries}
library(coRanalysis)
library(dplyr)
library(dbplyr)
library(tidyr)
library(readxl)

source(here::here("R", "setup.R"))


#Load HES inpatient and APC data (outpatient)
inpatient <- tbl(db_con, in_schema("public", "inpatient"))
outpatient <- tbl(db_con, in_schema("public", "outpatient"))


#Combine diagnoses and procedures from inpatient and outpatient data
hes_events <- pivot_hes(inpatient, outpatient)

# Identify death dates
deaths <- inpatient %>%
  filter(dismeth == 4) %>%
  group_by(token_person_id) %>%
  summarise(death_date = min(epiend, na.rm = TRUE))


#Transfer codelist from protocal and upload to database (dataset already uploaded to schema, no need to re-upload again)
# kite_codelist <- read_excel(here::here("kite_codelist.xlsx"))
# kite_codelist <- as.data.frame(kite_codelist)
# copy_to(db_con, kite_codelist, "kite.kite_codelist",  overwrite = TRUE)

#Upload hes_events (dataset already uploaded to schema, no need to re-upload again)
# coRanalysis::drop_compute(hes_events, "hes_events", "kite")

#Upload deaths dataset (dataset already uploaded to schema, no need to re-upload again)
# coRanalysis::drop_compute(deaths, "dlbcl_cohort_deaths", "kite")


#Load in the datasets
kite_codelist <- tbl(db_con, in_schema("kite", "kite_codelist"))
# hes_events <- tbl(db_con, in_schema("kite", "hes_events"))
deaths <- tbl(db_con, in_schema("kite", "dlbcl_cohort_deaths"))


```


# Attrition Table Overview
-Patients identified with a code for DLBCL between 1 January 2021 and 30 April 2023
-Patients with DLBCL in the eligibility period with complete information (gender and DOB)
-Patients with DLBCL in the eligibility period with complete information aged ≥18 years at diagnosis
-Patients with DLBCL in the eligibility period with complete information, aged ≥18, without evidence of HSCT prior to 31 December 2020
-STUDY POPULATION: Patients with DLBCL in the eligibility period and complete information, aged ≥18, without evidence of HSCT or any chemotherapy prior to 31 December 2020


# Inclusion
-A diagnosis of DLBCL (ICD-10 coding C833 Diffuse large B-cell lymphoma) in the APC or OP datasets within the eligibility period


```{r}
# dlbcl_cohort <-
#   kite_codelist %>%
#     filter(category == "Diagnosis") %>%
#     inner_join(hes_events, join_by(code_type, code), copy = TRUE) %>%

dlbcl_cohort <-
  hes_events %>%
    filter(code == "C833",
           code_type == "icd10") %>%
    filter(between(event_date, lookback_start, study_end)) %>% #within data period
    # Get first event for each patient
    group_by(token_person_id) %>%
    slice_min(event_date, n = 1, with_ties = FALSE) %>%
    ungroup() %>%
    mutate(
      token_person_id,
      index_dlbcl_date = event_date,
      index_dlbcl_code = code,
      index_dlbcl_key = key,
      index_dlbcl_key_type = key_type,
      .keep = "none"
    ) %>%
    compute()

#Patients identified with a code for DLBCL between 1 January 2021 and 30 April 2023
dlbcl_cohort <-
  dlbcl_cohort %>%
  filter(between(index_dlbcl_date, eligible_start, eligible_end)) %>% #within eligibility period
  compute()

dlbcl_cohort %>%
  count() #15439




#Upload table to database (already uploaded, no need to upload again)
# coRanalysis::drop_compute(dlbcl_cohort, "dlbcl_cohort_pre_exclusion", "kite")
#Load the cohort data in
dlbcl_cohort <- tbl(db_con, in_schema("kite", "dlbcl_cohort_pre_exclusion"))

```

# Exclusion
-<=18 years at diagnosis
<!-- -Evidence of DLBCL or haematopoietic stem cell transplantation (HSCT) prior to 31 December 2020 (see codelist in Appendix) -->
<!-- -Evidence of treatment with any chemotherapy within HES prior to 31 December 2020 -->
<!-- -Patients with missing gender or date of birth.  -->

-Evidence of DLBCL or haematopoietic stem cell transplantation (HSCT) prior earliest DLBCL diagnosis in the eligibility period, i.e., prior to index date (see codelist in Appendix)
-Evidence of treatment with any chemotherapy within HES prior to earliest DLBCL diagnosis in the eligibility period
-Patients with missing gender or date of birth. 

```{r create_demogrphics_table}
demographics <- list()

demographics$ip <- inpatient %>%
  select(token_person_id, 
         index_dlbcl_key = epikey, 
         index_dlbcl_age = startage, 
         index_dlbcl_sex = sex,
         index_dlbcl_admidate = admidate,
         index_dlbcl_imd = imd04_decile) %>%
  mutate(index_dlbcl_key_type = "epikey", 
         index_dlbcl_key = as.character(index_dlbcl_key), 
         across(c(index_dlbcl_age, index_dlbcl_sex), as.integer), 
         source = "inpatient")

demographics$op <- outpatient %>%
  select(token_person_id, 
         index_dlbcl_key = attendkey, 
         index_dlbcl_age = apptage, 
         index_dlbcl_sex = sex,
         index_dlbcl_imd = imd04_decile) %>%
  mutate(index_dlbcl_key_type = "attendkey", 
         across(c(index_dlbcl_age, index_dlbcl_sex), as.integer), 
         source = "outpatient")

index_dlbcl_demographics <- purrr::reduce(demographics, dplyr::union_all) %>% compute()


```


Patients with DLBCL in the eligibility period with complete information (gender and DOB)

```{r flag_no_sex_dob}

dlbcl_cohort <-
  dlbcl_cohort %>%
    left_join(index_dlbcl_demographics, join_by(token_person_id, index_dlbcl_key, index_dlbcl_key_type)) %>%
    mutate(age_sex_flag = if_else(((index_dlbcl_sex == 1L) |
                                  (index_dlbcl_sex == 2L)) &
                                  (is.na(index_dlbcl_age) == FALSE),
                          1,
                          0)) %>%
    compute()

dlbcl_cohort %>%
  filter(age_sex_flag == 1) %>%
  count() #13426


```



Patients with DLBCL in the eligibility period with complete information aged ≥18 years at diagnosis

```{r flag_under18}

dlbcl_cohort <-
  dlbcl_cohort %>%
  mutate(over18_flag = if_else(index_dlbcl_age >= 18, 1, 0)) %>%
  compute()

dlbcl_cohort %>%
  filter((over18_flag == 1) &
         (age_sex_flag == 1)) %>%
  count() #13369


```

Patients with DLBCL in the eligibility period with complete information, aged ≥18, without evidence of HSCT or previous DLBCL diagnosis prior to index DLBCL diagnosis

```{r flag_hsct_before_dlbcl}
#Remove individuals with previous HSCT diagnoses

dlbcl_cohort <- 
  hes_events %>%
    filter(between(event_date, lookback_start, study_end)) %>%
    right_join(kite_codelist %>% 
                filter(category == "HSCT") %>%
                select(-category),
              join_by(code, code_type),
              copy = TRUE) %>%
    right_join(dlbcl_cohort, 
               join_by(token_person_id),
               copy = TRUE) %>%
    group_by(token_person_id) %>%
    #Create flag for HSCT before dlbcl diagnosis date
    mutate(pre_dlbcl_hsct_flag = if_else((event_date < index_dlbcl_date), 1, 0)) %>%
    slice_min(event_date, n = 1, with_ties = FALSE) %>%
    ungroup() %>%
    mutate(pre_dlbcl_hsct_flag = if_else(is.na(pre_dlbcl_hsct_flag) == TRUE, 
                                         0, 
                                         pre_dlbcl_hsct_flag)) %>%
    rename(
      index_hsct_date = event_date,
      index_hsct_code_type = code_type,
      index_hsct_code = code
    ) %>%
    select(-key,
           -code_index,
           -key_type,
           -term) %>%
    compute()

#Number of individuals WITHOUT HSCT during lookback period, with complete info, age >=18
dlbcl_cohort %>%
  filter((pre_dlbcl_hsct_flag == 0) &
         (over18_flag == 1) &
         (age_sex_flag == 1)) %>%
  count() #13330

```

-STUDY POPULATION: Patients with DLBCL in the eligibility period and complete information, aged ≥18, without evidence of HSCT or any chemotherapy prior to DLBCL diagnosis date

```{r flag_chemotherapy_before_dlbcl}

dlbcl_cohort <- 
  hes_events %>%
    filter(between(event_date, lookback_start, study_end)) %>%
    right_join(kite_codelist %>% 
                filter(category == "Chemotherapy") %>%
                select(-category),
              join_by(code, code_type),
              copy = TRUE) %>%
    right_join(dlbcl_cohort, 
               join_by(token_person_id),
               copy = TRUE) %>%
    group_by(token_person_id) %>%
    #Create flag for chemotherapy before dlbcl diagnosis date
    mutate(pre_dlbcl_chemo_flag = if_else((event_date < index_dlbcl_date), 1, 0)) %>%
    slice_min(event_date, n = 1, with_ties = FALSE) %>%
    ungroup() %>%
    mutate(pre_dlbcl_chemo_flag = if_else(is.na(pre_dlbcl_chemo_flag) == TRUE, 0, pre_dlbcl_chemo_flag)) %>%
    rename(
      index_chemo_date = event_date,
      index_chemo_code_type = code_type,
      index_chemo_code = code
    ) %>%
    select(-key,
           -code_index,
           -key_type,
           -term) %>%
    compute()


#Number of individuals WITHOUT HSCT or chemotherapy during lookback period, with complete info, age >=18
dlbcl_cohort %>%
  filter((pre_dlbcl_chemo_flag == 0) &
         (pre_dlbcl_hsct_flag == 0) &
         (over18_flag == 1) &
         (age_sex_flag == 1)) %>%
  count() #11223


```

# Create eligibility flag

For eligible patients that had gone through both inclusions and exclusion filters

```{r}
dlbcl_cohort <- 
  dlbcl_cohort %>%
    mutate(eligible_flag = if_else(
      ((pre_dlbcl_chemo_flag == 0) &
       (pre_dlbcl_hsct_flag == 0) &
       (over18_flag == 1) &
       (age_sex_flag == 1)),
      1,
      0)
    )

#Save the table (already uploaded, no need to upload again)
# coRanalysis::drop_compute(dlbcl_cohort, "dlbcl_cohort", "kite")

# Note that futher changes to the cohort dataset will be present in 02_baseline_characteristics and 03_feasibility_analysis


```



```{r CODE DUMP}



# dplyr::compute(
#   dlbcl_cohort,
#   name = dbplyr::in_schema("kite", "dlbcl_cohort_pre_exclusion"),
#   temporary = FALSE
# )
# Backtrace:
#   1. dplyr::compute(...)
#   2. dbplyr:::compute.tbl_sql(...)
#   4. dbplyr:::db_compute.DBIConnection(...)
#   7. dbplyr:::dbplyr_save_query(...)
#   8. dbplyr:::dbplyr_fallback(con, "db_save_query", ...)
#  10. dbplyr:::db_save_query.DBIConnection(con, ...)

# kiteDb$upload(dlbcl_cohort, "dlbcl_cohort_pre_exclusion")
# 
# coRanalysis::upload_to_db(
#   dlbcl_cohort,
#   "dlbcl_cohort_pre_exclusion",
#   con = db_con,
#   schema_name_db = "kite")
# 
# 
# copy_to(db_con, dlbcl_cohort, "kite.dlbcl_cohort_pre_exclusion",  overwrite = TRUE)


```
