---
title: "Investigating positron emission tomography (PET) scan use in diffuse large B-cell lymphoma (DLBCL) - A Hospital Episode Statistics feasibility analysis"
author: "Andre Ng"
date: "`r Sys.Date()`"
output: html_document
format: html
editor: source
subtitle: "Cohort Creation"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)


# renv::snapshot()
#Check for any packaging issues
renv::status()
# renv::restore()


```



```{r load_libraries}
library(coRanalysis)
library(dplyr)
library(dbplyr)
library(tidyr)
library(readxl)

source(here::here("R", "setup.R"))


#Load HES inpatient and APC data (outpatient)
hes_con <- connect_to_db("hesdata_processed_hiq")

inpatient <- tbl(hes_con, in_schema("public", "inpatient"))
outpatient <- tbl(hes_con, in_schema("public", "outpatient"))


#Combine diagnoses and procedures from inpatient and outpatient data
hes_events <- pivot_hes(inpatient, outpatient)


#Transfer codelist from protocal and upload to database (dataset already uploaded to schema, no need to re-upload again)
# kite_codelist <- read_excel(here::here("kite_codelist.xlsx"))

# kite_codelist <- as.data.frame(kite_codelist)
# cprd_con <- connect_to_db(database = "cprd")
# copy_to(cprd_con, kite_codelist, "kite.kite_codelist",  overwrite = TRUE)
# dplyr::compute(
#   kite_codelist,
#   name = dbplyr::in_schema("kite", "kite_codelist"),
#   temporary = FALSE
# )
# db$upload(kite_codelist, "kite_codelist")

#Load in codelist for kite
kite_codelist <- tbl(db_con, in_schema("kite", "kite_codelist"))


```


# Attrition Table Overview
-Patients identified with a code for DLBCL between 1 January 2021 and 30 April 2023
-Patients with DLBCL in the eligibility period with complete information (gender and DOB)
-Patients with DLBCL in the eligibility period with complete information aged ≥18 years at diagnosis
-Patients with DLBCL in the eligibility period with complete information, aged ≥18, without evidence of HSCT prior to 31 December 2020
-STUDY POPULATION: Patients with DLBCL in the eligibility period and complete information, aged ≥18, without evidence of HSCT or any chemotherapy prior to 31 December 2020


# Inclusion
-A diagnosis of DLBCL (ICD-10 coding C833 Diffuse large B-cell lymphoma) in the APC or OP datasets


```{r}
# dlbcl_cohort <- 
#   hes_events %>%
#     filter(code == "C833",
#            code_type == "icd10") %>%

dlbcl_cohort <-
  kite_codelist %>%
    filter(category == "Diagnosis") %>%
    inner_join(hes_events, join_by(code_type, code), copy = TRUE) %>%
    filter(between(event_date, lookback_start, study_end)) %>% #within data period
    # Get first event for each patient
    group_by(token_person_id) %>%
    slice_min(event_date, n = 1, with_ties = FALSE) %>%
    ungroup() %>%
    mutate(
      token_person_id,
      index_dlbcl_date = event_date,
      index_dlbcl_code = code,
      index_dlbcl_key = key,
      index_dlbcl_key_type = key_type,
      .keep = "none"
    ) %>%
    compute()

#Total patients with DLBLCL from lookback date start to end of study period (within data period)
dlbcl_cohort %>%
  count() #40765

#Patients identified with a code for DLBCL between 1 January 2021 and 30 April 2023
dlbcl_cohort <-
  dlbcl_cohort %>%
  filter(between(index_dlbcl_date, lookback_start, eligible_end)) %>%
  compute()

dlbcl_cohort %>%
  count() #37370




# Upload table to database
# coRanalysis::drop_compute(dlbcl_cohort, "dlbcl_cohort_pre_exclusion", "kite")
# 
# dplyr::compute(
#   dlbcl_cohort,
#   name = dbplyr::in_schema("kite", "dlbcl_cohort_pre_exclusion"),
#   temporary = FALSE
# )
# Error in `db_compute()`:
# ! Can't copy query to table "kite"."dlbcl_cohort_pre_exclusion".
# Caused by error in `db_save_query.DBIConnection()`:
# ! Can't save query to table "kite"."dlbcl_cohort_pre_exclusion".
# ℹ Using SQL: CREATE TABLE "kite"."dlbcl_cohort_pre_exclusion" AS SELECT * FROM "dbplyr_0z9OIdLRg8"
# Caused by error:
# ! nanodbc/nanodbc.cpp:1710: 3F000
# [Amazon][Amazon Redshift] (30) Error occurred while trying to execute a query: [SQLState 3F000] ERROR:  schema "kite" does not exist
#  
# Backtrace:
#   1. dplyr::compute(...)
#   2. dbplyr:::compute.tbl_sql(...)
#   4. dbplyr:::db_compute.DBIConnection(...)
#   7. dbplyr:::dbplyr_save_query(...)
#   8. dbplyr:::dbplyr_fallback(con, "db_save_query", ...)
#  10. dbplyr:::db_save_query.DBIConnection(con, ...)


# compute(
#   dlbcl_cohort,
#   "dlbcl_cohort_pre_exclusion",
#   temporary = FALSE
# )
# 
# kiteDb$upload(dlbcl_cohort, "dlbcl_cohort_pre_exclusion")
# 
# coRanalysis::upload_to_db(
#   dlbcl_cohort,
#   "dlbcl_cohort_pre_exclusion",
#   con = db_con,
#   schema_name_db = "kite")
# 
# 
# copy_to(db_con, dlbcl_cohort, "kite.dlbcl_cohort_pre_exclusion",  overwrite = TRUE)


```

# Exclusion
-<=18 years at diagnosis
-Evidence of DLBCL or haematopoietic stem cell transplantation (HSCT) prior to 31 December 2020 (see codelist in Appendix)
-Evidence of treatment with any chemotherapy within HES prior to 31 December 2020
-Patients with missing gender or date of birth. 


```{r create_demogrphics_table}
demographics <- list()

demographics$ip <- inpatient %>%
  select(token_person_id, 
         index_dlbcl_key = epikey, 
         index_dlbcl_age = startage, 
         index_dlbcl_sex = sex,
         index_dlbcl_admidate = admidate) %>%
  mutate(index_dlbcl_key_type = "epikey", 
         index_dlbcl_key = as.character(index_dlbcl_key), 
         across(c(index_dlbcl_age, index_dlbcl_sex), as.integer), 
         source = "inpatient")

demographics$op <- outpatient %>%
  select(token_person_id, 
         index_dlbcl_key = attendkey, 
         index_dlbcl_age = apptage, 
         index_dlbcl_sex = sex) %>%
  mutate(index_dlbcl_key_type = "attendkey", 
         across(c(index_dlbcl_age, index_dlbcl_sex), as.integer), 
         source = "outpatient")

index_dlbcl_demographics <- purrr::reduce(demographics, dplyr::union_all) %>% compute()


```


Patients with DLBCL in the eligibility period with complete information (gender and DOB)

```{r flag_no_sex_dob}

dlbcl_cohort <-
  dlbcl_cohort %>%
    left_join(index_dlbcl_demographics, join_by(token_person_id, index_dlbcl_key, index_dlbcl_key_type)) %>%
    mutate(age_sex_flag = if_else((is.na(index_dlbcl_sex) == FALSE) &
                                  (is.na(index_dlbcl_age) == FALSE),
                          1,
                          0)) %>%
    compute()

dlbcl_cohort %>%
  filter(age_sex_flag == 1) %>%
  count() #33139

#---------------------------------------------------------------------------------------------------------------SAVE TABLE?

```



Patients with DLBCL in the eligibility period with complete information aged ≥18 years at diagnosis

```{r flag_under18}

dlbcl_cohort <-
  dlbcl_cohort %>%
  mutate(over18_flag = if_else(index_dlbcl_age >= 18, 1, 0)) %>%
  compute()

dlbcl_cohort %>%
  filter(over18_flag == 1) %>%
  count() #33012


```

Patients with DLBCL in the eligibility period with complete information, aged ≥18, without evidence of HSCT prior to 31 December 2020

```{r flag_hsct_before_study_start}
dlbcl_cohort <- 
  hes_events %>%
    mutate(hsct_flag = 1) %>%
    filter(between(event_date, lookback_start, lookback_end)) %>%
    right_join(kite_codelist %>% 
                filter(category == "HSCT") %>%
                select(-category),
              join_by(code, code_type),
              copy = TRUE) %>%
    right_join(dlbcl_cohort, 
               join_by(token_person_id),
               copy = TRUE) %>%
    group_by(token_person_id) %>%
    slice_min(event_date, n = 1, with_ties = FALSE) %>%
    ungroup() %>%
    mutate(hsct_flag = if_else(is.na(hsct_flag) == TRUE, 0, 1)) %>%
    rename(
      index_hsct_date = event_date,
      index_hsct_code_type = code_type,
      index_hsct_code = code
    ) %>%
    select(-key,
           -code_index,
           -key_type,
           -term) %>%
    compute()

#Number of individuals with HSCT during lookback period
dlbcl_cohort %>%
  filter(hsct_flag == 1) %>%
  count() #135

#Number of individuals WITHOUT HSCT during lookback period, with complete info, age >=18
dlbcl_cohort %>%
  filter((hsct_flag == 0) &
         (over18_flag == 1) &
         (age_sex_flag == 1)) %>%
  count() #32884

```

-STUDY POPULATION: Patients with DLBCL in the eligibility period and complete information, aged ≥18, without evidence of HSCT or any chemotherapy prior to 31 December 2020

```{r flag_chemotherapy_before_study_start}

dlbcl_cohort <- 
  hes_events %>%
    mutate(chemotherapy_flag = 1) %>%
    filter(between(event_date, lookback_start, lookback_end)) %>%
    right_join(kite_codelist %>% 
                filter(category == "Chemotherapy") %>%
                select(-category),
              join_by(code, code_type),
              copy = TRUE) %>%
    right_join(dlbcl_cohort, 
               join_by(token_person_id),
               copy = TRUE) %>%
    group_by(token_person_id) %>%
    slice_min(event_date, n = 1, with_ties = FALSE) %>%
    ungroup() %>%
    mutate(chemotherapy_flag = if_else(is.na(chemotherapy_flag) == TRUE, 0, 1)) %>%
    rename(
      index_chemo_date = event_date,
      index_chemo_code_type = code_type,
      index_chemo_code = code
    ) %>%
    select(-key,
           -code_index,
           -key_type,
           -term) %>%
    compute()

#Number of individuals with chemotherapy during lookback period
dlbcl_cohort %>%
  filter(chemotherapy_flag == 1) %>%
  count() #15693

#Number of individuals WITHOUT HSCT or chemotherapy during lookback period, with complete info, age >=18
dlbcl_cohort %>%
  filter((chemotherapy_flag == 0) &
         (hsct_flag == 0) &
         (over18_flag == 1) &
         (age_sex_flag == 1)) %>%
  count() #18307

#---------------------------------------------------------------------------------------------------------------SAVE TABLE?

```

# Create eligibility flag

For eligible patients that had gone through both inclusions and exclusion filters

```{r}
dlbcl_cohort <- 
  dlbcl_cohort %>%
    mutate(eligible_flag = if_else(
      ((chemotherapy_flag == 0) &
       (hsct_flag == 0) &
       (over18_flag == 1) &
       (age_sex_flag == 1)),
      1,
      0)
    )


```




